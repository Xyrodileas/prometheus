version: '3.3'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:
  transit:
     external: true
services:

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention=60d'
    # ports:
    #   - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
      - transit
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus-secure.entrypoints=websecure"
      - "traefik.http.routers.prometheus-secure.rule=Host(`pr.${HOMELAB_DOMAIN}`)"
      - "traefik.http.routers.prometheus-secure.tls=true"
      - "traefik.http.routers.prometheus-secure.service=prometheus"
      - "traefik.http.routers.prometheus-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=3000"
      - "traefik.docker.network=transit"
      # Admin UI
      - "traefik.http.routers.prometheus-ui.entrypoints=web"
      - "traefik.http.routers.prometheus-ui.rule=Host(`prom.${HOMELAB_DOMAIN}`)"
      - "traefik.http.routers.prometheus-ui.middlewares=https-redirect"
      - "traefik.http.routers.prometheus-ui-secure.entrypoints=websecure"
      - "traefik.http.routers.prometheus-ui-secure.rule=Host(`prom.${HOMELAB_DOMAIN}`)"
      - "traefik.http.routers.prometheus-ui-secure.tls=true"
      - "traefik.http.routers.prometheus-ui-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prometheus-ui-secure.service=prometheus-ui"
      - "traefik.http.services.prometheus-ui.loadbalancer.server.port=9090"
      - "traefik.http.middlewares.openid-prometheus-ui.forwardauth.address=http://traefik-auth:4181"
      - "traefik.http.middlewares.openid-prometheus-ui.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.openid-prometheus-ui.forwardauth.tls.insecureSkipVerify=true"
      - "traefik.http.middlewares.openid-prometheus-ui.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.prometheus-ui-secure.middlewares=openid-prometheus-ui"


  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    # ports:
    #   - 9100:9100
    networks:
      - back-tier
    restart: always
    # deploy:
    #   mode: global

  alertmanager:
    image: prom/alertmanager
    # ports:
    #   - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: google/cadvisor
    #name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    # ports:
    #   - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:6.5.0
    user: "472"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
      - transit
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.rule=Host(`graph.${HOMELAB_DOMAIN}`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.routers.grafana-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=transit"
